apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: spring-boot-app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: spring-boot-app
  minReplicas: 1
  maxReplicas: 15
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 100
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-app
  labels:
    component: spring-boot-app
spec:
  ports:
    - port: 8080
      nodePort: 30080
  selector:
    component: localhpatest
  type: "NodePort"
---
apiVersion: apps/v1 # for versions before 1.8.0 use apps/v1beta1
kind: Deployment
metadata:
  name: spring-boot-app
  labels:
    component: spring-boot-app
spec:
  selector:
    matchLabels:
      component: "spring-boot-app"
  replicas: 2 # tells deployment to run x pods matching the template
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
  template: # create pods using pod definition in this template
    metadata:
      labels:
        component: "spring-boot-app"
    spec:
      containers:
        - name: spring-boot-app
          image: "com.fsistemas/dockerboot-demo:latest"
          imagePullPolicy: "Never"
          ports:
            - name: server
               containerPort: 8080
            - name: management
               containerPort: 8081
          resources:
            requests:
              cpu: "100m"
              memory: "512Mi"
            limits:
              cpu: "250m"
              memory: "1024Mi"
          livenessProbe:
            httpGet:
              path: /health-check
              port: 8080
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            initialDelaySeconds: 55
          readinessProbe:
            httpGet:
              path: /health-check
              port: 8080
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 2
            failureThreshold: 5
            initialDelaySeconds: 55
